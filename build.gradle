apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'project-reports'
apply plugin: 'application'

group = 'kafka.examples'
version = '0.0.1-dev'
sourceCompatibility = 1.8


// Set kafkaClientsBuildLibDir and kafkaClientsVersion in your gradle.properties file
// or define them here
// def kafkaClientsBuildLibDir = '/Users/lafranll/prjs/secgit/databus-kafka/clients/build/libs/'
// def kafkaClientsVersion = '0.9.0.2-SNAPSHOT'


repositories {
    flatDir(dirs: kafkaClientsBuildLibDir)
    mavenCentral()
}
dependencies {
    compile "org.apache.kafka:kafka-clients:${kafkaClientsVersion}"
    compile 'net.jpountz.lz4:lz4:1.3.0'
    compile 'org.xerial.snappy:snappy-java:1.1.2.6'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    compile 'org.apache.logging.log4j:log4j-core:2.6.2'
    compile 'org.apache.avro:avro:1.8.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.0.0'
    testCompile 'commons-io:commons-io:1.4'
    testCompile 'org.mockito:mockito-core:1.8.0'

    //dependencies of mockito
    testCompile files('lib/objenesis-1.0.jar', 'lib/hamcrest-core-1.1.jar')
}

jar {
    manifest {
        attributes 'Main-Class': 'kafka.examples.ConsumerProducerDemo1'
    }
    
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

mainClassName = 'kafka.examples.ConsumerProducerDemo1'

task myRun(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "kafka.examples.ConsumerProducerDemo1"
    //args "arg1", "arg2"
    //args project.getProperty('arg1') project.getProperty('arg2')
    if ( project.hasProperty("appArgs") ) {
        args Eval.me(appArgs)
    }
}

//--------------------
// Util methods
//--------------------
task wrapper(type: Wrapper, description: 'Generate the Gradle Wrapper') { gradleVersion = '2.14' }
